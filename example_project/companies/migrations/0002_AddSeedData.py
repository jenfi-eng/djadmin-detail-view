# Generated by Django 4.2.10 on 2024-02-21 03:01
from faker import Faker

from django.db import migrations
from django.contrib.auth.models import BaseUserManager
from django.contrib.auth.hashers import make_password

from django.conf import settings

def generate_superuser(apps, schema_editor):
    User = apps.get_model(settings.AUTH_USER_MODEL)

    email = "example@test.com"
    password = "test1234"

    if not User.objects.filter(email=email).exists():
        user = User()
        user.email = BaseUserManager.normalize_email(email)
        user.username = "example"
        user.first_name = "Example"
        user.last_name = "Tester"
        user.password = make_password(password)
        user.is_staff = True
        user.is_superuser = True
        user.timezone = "Asia/Singapore"
        user.language = "en-sg"

        user.save()

def generate_company_and_contacts(apps, schema_editor):
    fake = Faker()

    Company = apps.get_model("companies", "Company")
    Contact = apps.get_model("companies", "Contact")

    company = Company()
    company.name = fake.company()
    company.address = fake.address()
    company.phone = fake.phone_number()
    company.email = fake.email()
    company.website = fake.url()
    company.description = fake.text()
    company.is_active = True

    company.save()

    for _ in range(5):
        contact = Contact(
            company=company,
            name=fake.name(),
            phone=fake.phone_number(),
            email=fake.email(),
            is_active=True
        )
        contact.save()

class Migration(migrations.Migration):
    dependencies = [
        ("companies", "0001_initial"),
    ]

    operations = [
        migrations.RunPython(generate_superuser),
        migrations.RunPython(generate_company_and_contacts),
    ]
